[{"/Users/daniel/WebstormProjects/theplatformers/src/components/BaseLayout.tsx":"1","/Users/daniel/WebstormProjects/theplatformers/src/components/RegisterFormtutor.tsx":"2","/Users/daniel/WebstormProjects/theplatformers/src/components/admin/container/adminContainer.tsx":"3","/Users/daniel/WebstormProjects/theplatformers/src/components/admin/navbar/navItem.tsx":"4","/Users/daniel/WebstormProjects/theplatformers/src/components/admin/navbar/navbar.tsx":"5","/Users/daniel/WebstormProjects/theplatformers/src/components/admin/navbar/sidebar.tsx":"6","/Users/daniel/WebstormProjects/theplatformers/src/components/edugramLogo.tsx":"7","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/Buttons/SubmitButton.tsx":"8","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/Buttons/index.ts":"9","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/GoogleBtn/GoogleBtn.tsx":"10","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/GoogleBtn/index.ts":"11","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/InputField/InputField.tsx":"12","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/InputField/index.ts":"13","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/PasswordInput/PasswordInput.tsx":"14","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/PasswordInput/index.ts":"15","/Users/daniel/WebstormProjects/theplatformers/src/models/UserModel.ts":"16","/Users/daniel/WebstormProjects/theplatformers/src/pages/_app.tsx":"17","/Users/daniel/WebstormProjects/theplatformers/src/pages/admin.tsx":"18","/Users/daniel/WebstormProjects/theplatformers/src/pages/adminpanel.tsx":"19","/Users/daniel/WebstormProjects/theplatformers/src/pages/api/api.storage.tsx":"20","/Users/daniel/WebstormProjects/theplatformers/src/pages/api/hello.ts":"21","/Users/daniel/WebstormProjects/theplatformers/src/pages/blogs.tsx":"22","/Users/daniel/WebstormProjects/theplatformers/src/pages/categories.tsx":"23","/Users/daniel/WebstormProjects/theplatformers/src/pages/dashboard.tsx":"24","/Users/daniel/WebstormProjects/theplatformers/src/pages/example.tsx":"25","/Users/daniel/WebstormProjects/theplatformers/src/pages/index.tsx":"26","/Users/daniel/WebstormProjects/theplatformers/src/pages/notFoundPage.tsx":"27","/Users/daniel/WebstormProjects/theplatformers/src/pages/register.tsx":"28","/Users/daniel/WebstormProjects/theplatformers/src/pages/tickets.tsx":"29","/Users/daniel/WebstormProjects/theplatformers/src/pages/users.tsx":"30","/Users/daniel/WebstormProjects/theplatformers/src/theme/breakpoints.ts":"31","/Users/daniel/WebstormProjects/theplatformers/src/theme/colors.ts":"32","/Users/daniel/WebstormProjects/theplatformers/src/theme/global-style.ts":"33","/Users/daniel/WebstormProjects/theplatformers/src/theme/index.ts":"34","/Users/daniel/WebstormProjects/theplatformers/src/theme/sizes.ts":"35","/Users/daniel/WebstormProjects/theplatformers/src/theme/theme.ts":"36","/Users/daniel/WebstormProjects/theplatformers/src/theme/typograpyh.ts":"37","/Users/daniel/WebstormProjects/theplatformers/src/components/Footer.tsx":"38","/Users/daniel/WebstormProjects/theplatformers/src/components/ProfileBtn/ProfileBtn.tsx":"39","/Users/daniel/WebstormProjects/theplatformers/src/components/ProfileBtn/index.ts":"40","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/LoginModal/LoginModal.tsx":"41","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/LoginModal/index.ts":"42","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/Navbar/Navbar.tsx":"43","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/Navbar/index.ts":"44","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/SearchField/SearchField.tsx":"45","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/SearchField/index.ts":"46","/Users/daniel/WebstormProjects/theplatformers/src/models/TutorModel.ts":"47","/Users/daniel/WebstormProjects/theplatformers/src/pages/blogSetup.tsx":"48","/Users/daniel/WebstormProjects/theplatformers/src/pages/search/[subject].tsx":"49","/Users/daniel/WebstormProjects/theplatformers/src/components/chatComponents/Bottombar.tsx":"50","/Users/daniel/WebstormProjects/theplatformers/src/components/chatComponents/Topbar.tsx":"51","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/DashboardCard/DashboardCard.tsx":"52","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/DashboardCard/index.ts":"53","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/ProfileLinkNavigation/ProfileLinkNavigation.tsx":"54","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/ProfileLinkNavigation/index.ts":"55","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/ProfileNavigation/ProfileNavigation.tsx":"56","/Users/daniel/WebstormProjects/theplatformers/src/components/shared/ProfileNavigation/index.ts":"57","/Users/daniel/WebstormProjects/theplatformers/src/models/ChatModel.ts":"58","/Users/daniel/WebstormProjects/theplatformers/src/pages/ChatSidebar.tsx":"59","/Users/daniel/WebstormProjects/theplatformers/src/pages/chat/[id].tsx":"60","/Users/daniel/WebstormProjects/theplatformers/src/pages/invoices.tsx":"61","/Users/daniel/WebstormProjects/theplatformers/src/pages/messages.tsx":"62","/Users/daniel/WebstormProjects/theplatformers/src/pages/profile.tsx":"63"},{"size":437,"mtime":1669652437325,"results":"64","hashOfConfig":"65"},{"size":2610,"mtime":1671114269401,"results":"66","hashOfConfig":"65"},{"size":1261,"mtime":1669898337973,"results":"67","hashOfConfig":"65"},{"size":3946,"mtime":1669898337974,"results":"68","hashOfConfig":"65"},{"size":3985,"mtime":1670517758331,"results":"69","hashOfConfig":"65"},{"size":2530,"mtime":1670236989610,"results":"70","hashOfConfig":"65"},{"size":4958,"mtime":1669652437326,"results":"71","hashOfConfig":"65"},{"size":668,"mtime":1671114269401,"results":"72","hashOfConfig":"65"},{"size":30,"mtime":1669652437326,"results":"73","hashOfConfig":"65"},{"size":932,"mtime":1671114269402,"results":"74","hashOfConfig":"65"},{"size":27,"mtime":1669652437327,"results":"75","hashOfConfig":"65"},{"size":465,"mtime":1671114269403,"results":"76","hashOfConfig":"65"},{"size":29,"mtime":1669652437327,"results":"77","hashOfConfig":"65"},{"size":1108,"mtime":1671114269405,"results":"78","hashOfConfig":"65"},{"size":32,"mtime":1669898337975,"results":"79","hashOfConfig":"65"},{"size":664,"mtime":1671114269407,"results":"80","hashOfConfig":"65"},{"size":840,"mtime":1671114269407,"results":"81","hashOfConfig":"65"},{"size":258,"mtime":1669898337975,"results":"82","hashOfConfig":"65"},{"size":312,"mtime":1671114269407,"results":"83","hashOfConfig":"65"},{"size":1181,"mtime":1671114269407,"results":"84","hashOfConfig":"65"},{"size":307,"mtime":1668609161012,"results":"85","hashOfConfig":"65"},{"size":207,"mtime":1670236989611,"results":"86","hashOfConfig":"65"},{"size":275,"mtime":1669898337976,"results":"87","hashOfConfig":"65"},{"size":373,"mtime":1671114269407,"results":"88","hashOfConfig":"65"},{"size":1627,"mtime":1669652437328,"results":"89","hashOfConfig":"65"},{"size":2043,"mtime":1671114269408,"results":"90","hashOfConfig":"65"},{"size":240,"mtime":1668609161013,"results":"91","hashOfConfig":"65"},{"size":1723,"mtime":1671114269408,"results":"92","hashOfConfig":"65"},{"size":268,"mtime":1669898337977,"results":"93","hashOfConfig":"65"},{"size":250,"mtime":1669898337977,"results":"94","hashOfConfig":"65"},{"size":225,"mtime":1671114269409,"results":"95","hashOfConfig":"65"},{"size":459,"mtime":1669652437328,"results":"96","hashOfConfig":"65"},{"size":441,"mtime":1669652437329,"results":"97","hashOfConfig":"65"},{"size":33,"mtime":1669652437329,"results":"98","hashOfConfig":"65"},{"size":229,"mtime":1669652437329,"results":"99","hashOfConfig":"65"},{"size":440,"mtime":1669652437329,"results":"100","hashOfConfig":"65"},{"size":492,"mtime":1669652437329,"results":"101","hashOfConfig":"65"},{"size":4703,"mtime":1670236989610,"results":"102","hashOfConfig":"65"},{"size":939,"mtime":1671114269400,"results":"103","hashOfConfig":"65"},{"size":29,"mtime":1671114269400,"results":"104","hashOfConfig":"65"},{"size":6364,"mtime":1671114269403,"results":"105","hashOfConfig":"65"},{"size":30,"mtime":1671114269403,"results":"106","hashOfConfig":"65"},{"size":2036,"mtime":1671114269403,"results":"107","hashOfConfig":"65"},{"size":25,"mtime":1671114269405,"results":"108","hashOfConfig":"65"},{"size":1534,"mtime":1671114269406,"results":"109","hashOfConfig":"65"},{"size":30,"mtime":1671114269406,"results":"110","hashOfConfig":"65"},{"size":467,"mtime":1671114269407,"results":"111","hashOfConfig":"65"},{"size":265,"mtime":1670236989611,"results":"112","hashOfConfig":"65"},{"size":8857,"mtime":1671114269409,"results":"113","hashOfConfig":"65"},{"size":1123,"mtime":1671114269401,"results":"114","hashOfConfig":"65"},{"size":417,"mtime":1671114269401,"results":"115","hashOfConfig":"65"},{"size":1802,"mtime":1671114269401,"results":"116","hashOfConfig":"65"},{"size":35,"mtime":1671114269402,"results":"117","hashOfConfig":"65"},{"size":1269,"mtime":1671114269406,"results":"118","hashOfConfig":"65"},{"size":63,"mtime":1671114269406,"results":"119","hashOfConfig":"65"},{"size":761,"mtime":1671114269406,"results":"120","hashOfConfig":"65"},{"size":36,"mtime":1671114269406,"results":"121","hashOfConfig":"65"},{"size":206,"mtime":1671119470596,"results":"122","hashOfConfig":"65"},{"size":2926,"mtime":1671126084578,"results":"123","hashOfConfig":"65"},{"size":2174,"mtime":1671127464615,"results":"124","hashOfConfig":"65"},{"size":289,"mtime":1671114269408,"results":"125","hashOfConfig":"65"},{"size":277,"mtime":1671114269408,"results":"126","hashOfConfig":"65"},{"size":13774,"mtime":1671114269408,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1umrnag",{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305"},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319"},"/Users/daniel/WebstormProjects/theplatformers/src/components/BaseLayout.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/RegisterFormtutor.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/admin/container/adminContainer.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/admin/navbar/navItem.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/admin/navbar/navbar.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/admin/navbar/sidebar.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/edugramLogo.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/Buttons/SubmitButton.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/Buttons/index.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/GoogleBtn/GoogleBtn.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/GoogleBtn/index.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/InputField/InputField.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/InputField/index.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/PasswordInput/PasswordInput.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/PasswordInput/index.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/models/UserModel.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/_app.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/admin.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/adminpanel.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/api/api.storage.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/api/hello.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/blogs.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/categories.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/dashboard.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/example.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/index.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/notFoundPage.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/register.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/tickets.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/users.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/theme/breakpoints.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/theme/colors.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/theme/global-style.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/theme/index.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/theme/sizes.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/theme/theme.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/theme/typograpyh.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/Footer.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/ProfileBtn/ProfileBtn.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/ProfileBtn/index.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/LoginModal/LoginModal.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/LoginModal/index.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/Navbar/Navbar.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/Navbar/index.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/SearchField/SearchField.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/SearchField/index.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/models/TutorModel.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/blogSetup.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/search/[subject].tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/chatComponents/Bottombar.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/chatComponents/Topbar.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/DashboardCard/DashboardCard.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/DashboardCard/index.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/ProfileLinkNavigation/ProfileLinkNavigation.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/ProfileLinkNavigation/index.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/ProfileNavigation/ProfileNavigation.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/components/shared/ProfileNavigation/index.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/models/ChatModel.ts",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/ChatSidebar.tsx",["320"],[],"import {Flex} from \"@chakra-ui/layout\";\nimport {Avatar, Button, IconButton, Link, Text} from \"@chakra-ui/react\";\nimport {ArrowLeftIcon} from \"@chakra-ui/icons\"\n// @ts-ignore\nimport {router} from \"next/router\";\nimport React, {useEffect, useState} from \"react\";\nimport * as io from \"socket.io-client\";\nimport {ChatModel} from \"../models/ChatModel\";\n// const Chat = require(\"../../server/models/chat\");\n\nlet chosenChatTutor = \"\";\n\nfunction setId(id: string) {\n    chosenChatTutor = id;\n}\n\nfunction chosenChat(tutor: string) {\n    console.log(\"_id in chosenChat: \" + tutor);\n    chosenChatTutor = tutor;\n    router.push(`/chat/${tutor}`);\n}\n\nconst showChats = (data: ChatModel[]) =>\n    data?.map(chat => {\n        console.log(\"data in showChats: \" + data);\n        return (\n            <Flex key={chat._id} p={3} align=\"center\" _hover={{bg: \"gray.100\", cursor: \"pointer\"}}\n                  onClick={ () => chosenChat(chat.tutor)}>\n                <Avatar src=\"\" marginEnd={3}/>\n                <Text>{chat.tutor}</Text>\n            </Flex>\n        )\n    })\n\n\n\nconst socket = io.connect(\"ws://localhost:3001\", { transports: ['websocket', 'polling', 'flashsocket'] });\n\n\nexport default function ChatSidebar() {\n    const tempArray: ChatModel[] = [];\n    const temp: ChatModel[] = [];\n\n    const [chatList, setChatlist] = useState(temp);\n    useEffect(() => {\n        socket.on(\"user-chats\", (data) => {\n            data.forEach(function (value: ChatModel) {\n                if (value.tutor != null) {\n                    console.log(value)\n                    let temp;\n                    let _id = value._id;\n                    let messages = value.messages;\n                    let student = value.student;\n                    let tutor = value.tutor;\n                    // temp = new ChatModel({_id, messages, student, tutor})\n                    tempArray.push(value)\n                }\n\n            });\n            console.log(\"This is tempArray: \" + tempArray)\n            setChatlist(tempArray);\n        });\n    }, [socket]);\n    return (\n        <Flex\n            w=\"300px\"\n            borderEnd=\"1px solid\" borderColor=\"gray.200\"\n            direction=\"column\"\n        >\n            <Flex\n                h=\"81px\" w=\"100%\"\n                align=\"center\"\n                justifyContent=\"space-between\"\n                borderBottom=\"1px solid\" borderColor=\"gray.200\"\n                p={3}\n            >\n                <Flex align=\"center\">\n                    <Avatar src=\"\" margin={3}/>\n                    <Text>Alperen Kavakli</Text>\n                </Flex>\n                <IconButton size=\"sm\" isRound icon={<ArrowLeftIcon/>} aria-label=\"Close\"/>\n            </Flex>\n\n            <Flex overflowX=\"hidden\" overflowY=\"scroll\" direction=\"column\"\n                  sx={{'::-webkit-scrollbar': {display: 'none'}}}>\n            </Flex>\n            {showChats(chatList)}\n        </Flex>\n    )\n}\n\nexport {chosenChatTutor};\n","/Users/daniel/WebstormProjects/theplatformers/src/pages/chat/[id].tsx",["321"],[],"import {Flex} from \"@chakra-ui/layout\"\nimport ChatSidebar, {chosenChatTutor} from \"../ChatSidebar\";\nimport Topbar from \"../../components/chatComponents/Topbar\";\nimport Bottombar from \"../../components/chatComponents/Bottombar\";\nimport {Text} from \"@chakra-ui/react\";\nimport Head from \"next/head\";\nimport React, {useEffect, useState} from \"react\";\nimport * as io from \"socket.io-client\";\nimport {ChatModel} from \"../../models/ChatModel\";\n\nconst socket = io.connect(\"ws://localhost:3001\", { transports: ['websocket', 'polling', 'flashsocket'] });\n\nconst getMessages = (chat: ChatModel) =>\n    chat?.messages.map(msg => {\n        //test1 needs to be replaced with logged in user or student if tutor is logged in\n        const sender = msg.sender === \"test1\";\n        console.log(\"chat: \" + chat);\n        console.log(\"msg: \" + msg.sender);\n        const array = new Uint32Array(10);\n        return (\n            <Flex key = {Math.random()} alignSelf={sender ? \"flex-end\" :  \"flex-start\"} bg={sender ? \"green.100\" : \"blue.100\"} w=\"fit-content\" minWidth=\"100px\" borderRadius=\"lg\" p={3} m={1}>\n                <Text>{msg.message}</Text>\n            </Flex>\n        )\n    })\n\n\n\nexport default function ChatApp() {\n    const [chat, setChat] = useState();\n    console.log(\"tutor to be emitted: \" + chosenChatTutor);\n    //test1 needs to be replaced with logged in user or student if tutor is logged in\n    socket.emit('join-chat', \"test1\", chosenChatTutor);\n    useEffect(() => {\n        socket.on(\"update-chat\", (chat) => {\n            setChat(chat);\n        });\n    }, [socket]);\n    return (\n        <Flex\n            h=\"100vh\"\n            overflowX=\"hidden\">\n            <Head>\n                <title>Chat app</title>\n            </Head>\n            <ChatSidebar/>\n\n            <Flex\n                flex={1}\n                direction=\"column\">\n                <Topbar/>\n\n                <Flex flex={1} direction=\"column\" pt={4} mx={5} overflowX=\"scroll\" overflowY=\"scroll\"\n                      sx={{'::-webkit-scrollbar': {display: 'none'}}}>\n                </Flex>\n                {getMessages(chat!)}\n                <Bottombar/>\n            </Flex>\n        </Flex>\n    )\n}\n","/Users/daniel/WebstormProjects/theplatformers/src/pages/invoices.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/messages.tsx",[],[],"/Users/daniel/WebstormProjects/theplatformers/src/pages/profile.tsx",["322"],[],"import React, {useEffect, useReducer, useState} from \"react\";\nimport ProfileNavigation from \"../components/shared/ProfileNavigation/ProfileNavigation\";\nimport {\n    Box,\n    Card,\n    CardBody,\n    CardFooter,\n    CardHeader,\n    Grid,\n    GridItem,\n    HStack,\n    Image,\n    Input,\n    Text,\n    FormControl,\n    FormHelperText, FormLabel, SimpleGrid, Radio,\n} from \"@chakra-ui/react\";\nimport {SubmitButton} from \"../components/shared/Buttons\";\nimport {DashboardCard} from \"../components/shared/DashboardCard\";\nimport {InputField} from \"../components/shared/InputField/InputField\";\nimport {decodeJWT, getToken, isAuthenticated, isTutor} from \"./api/api.storage\";\nimport {TutorModel} from \"../models/TutorModel\";\nimport {useRouter} from \"next/router\";\nimport {RadioCard} from \"./search/[subject]\";\n\nexport const Profile = () => {\n    const [firstName, setFirstname] = useState('')\n    const [lastName, setLastname] = useState('')\n    const [phoneNumber, setPhonenumber] = useState('')\n    const [gender, setGender] = useState('')\n    const [birthdate, setBirthdate] = useState('')\n    const [postalCode, setPostalCode] = useState('')\n    const [streetName, setStreetName] = useState('')\n    const [tutor, setTutor] = useState({} as TutorModel)\n    const isError = firstName === ''\n    const router = useRouter()\n\n    useEffect(() => {\n        isAuthenticated() && isTutor() ? getTutor(decodeJWT().id) : router.push('/')\n    }, [])\n\n    const getTutor = (id: string) => {\n        fetch('http://localhost:8000/tutor/' + id, {\n            method: 'GET',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': 'http://localhost:8000',\n                'Authorization': 'Bearer ' + getToken()\n            },\n            redirect: 'follow'\n        }).then(response => response.json()).then(result =>\n            setTutor(result)\n\n        )\n    }\n\n    const handleProfileChanges = () => {\n        const formattedBirthDate = new Date(birthdate).toLocaleDateString('german', {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric'\n        })\n        console.log(formattedBirthDate)\n        const profile = {\n            firstName,\n            lastName, formattedBirthDate, gender, phoneNumber\n        }\n        fetch('http://localhost:8000/tutor/' + tutor._id, {\n            method: 'PUT',\n            body: JSON.stringify({profile: profile}),\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': 'http://localhost:8000',\n                'Authorization': 'Bearer ' + getToken()\n            },\n        }).then(response => response.json()).then(result =>\n            console.log(result)\n        )\n        alert(JSON.stringify(profile))\n    }\n\n    const handleLivingPlaceChanges = () => {\n        const livingPlace = {\n            streetName, postalCode\n        }\n        fetch('http://localhost:8000/tutor/' + tutor._id, {\n            method: 'PUT',\n            body: JSON.stringify({livingPlace: livingPlace}),\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': 'http://localhost:8000',\n                'Authorization': 'Bearer ' + getToken()\n            },\n        }).then(response => response.json()).then(result =>\n            console.log(result)\n        )\n        alert(JSON.stringify(livingPlace))\n    }\n\n    const handleConfirmAction = () => {\n        const confirmAction = confirm('Are you really really really sure about this? \\n This action cannot be undone')\n        confirmAction ? fetch('http://localhost:8000/tutor/' + tutor._id, {\n            method: 'DELETE',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': 'http://localhost:8000',\n                'Authorization': 'Bearer ' + getToken()\n            }\n        }).then(response => response.json()).then(() =>\n            alert('Thanks for using Edugram!')\n        ).then(() => router.push('/register')).catch(err => {\n            console.log(err)\n        }) : alert(\"One user was saved today!\")\n    }\n\n    return (\n        <Box>\n            <ProfileNavigation/>\n            <SimpleGrid padding={'20px'}\n                        columns={{sm: 2, md: 3}}\n                        h='200px'\n                        templateRows='repeat(1, 1fr)'\n                        templateColumns='repeat(4, 1fr)'\n                        gap={10}>\n                <GridItem rowSpan={2} colSpan={1}>\n                    <Card boxShadow={'xl'} borderRadius={20} bg={'white'}>\n                        <CardHeader>\n                            <Image margin={'auto'}\n                                   src=\"images/placeholderImage.png\"\n                                   alt=\"Placeholder for image of Identity\"\n                            />\n                        </CardHeader>\n                        <CardBody>\n                            <FormControl>\n                                <FormLabel fontSize={'xs'}>Firstname</FormLabel>\n                                <Input mb={2} variant='filled' fontSize={'sm'}\n                                       placeholder={tutor.firstName ? tutor.firstName : 'First name unknown'}\n                                       value={firstName}\n                                       onChange={(e) => {\n                                           setFirstname(e.target.value)\n                                       }}/>\n                                <FormLabel fontSize={'xs'}>Lastname</FormLabel>\n                                <Input mb={2} variant='filled' fontSize={'sm'}\n                                       placeholder={tutor.lastName ? tutor.lastName : 'Last name unknown'}\n                                       value={lastName}\n                                       onChange={(e) => {\n                                           setLastname(e.target.value)\n                                       }}/>\n                                <FormLabel fontSize={'xs'}>Birthdate</FormLabel>\n                                <Input mb={2} variant='filled' fontSize={'sm'} type={'date'}\n                                       placeholder={tutor.dateOfBirth ? tutor.dateOfBirth : 'Birthdate unknown'}\n                                       value={birthdate} onChange={(e) => {\n                                    setBirthdate(e.target.value)\n                                }}/>\n                                <FormHelperText fontSize={'xs'} textAlign={'center'} mb={2} marginTop={'-5px'}>Current\n                                    birthdate is: {tutor.dateOfBirth ? tutor.dateOfBirth : 'Unknown'}</FormHelperText>\n                                <FormLabel fontSize={'xs'}>Gender</FormLabel>\n                                <Input mb={2} variant='filled' fontSize={'sm'}\n                                       placeholder={tutor.gender ? tutor.gender : 'Gender unknown'} value={gender}\n                                       onChange={(e) => {\n                                           setGender(e.target.value)\n                                       }}/>\n                                <FormLabel fontSize={'xs'}>Email</FormLabel>\n                                <Input mb={2} variant='filled' fontSize={'sm'} isReadOnly={true}\n                                       placeholder={tutor.email ? tutor.email : 'Email unknown'}\n                                       value={tutor.email}/>\n                                <FormLabel fontSize={'xs'}>Phonenumber</FormLabel>\n                                <Input mb={2} variant='filled' fontSize={'sm'} type={'number'} maxLength={10}\n                                       placeholder={tutor.phoneNumber ? tutor.phoneNumber.toString() : 'Number unknown'}\n                                       value={phoneNumber} onChange={(e) => {\n                                    setPhonenumber(e.target.value)\n                                }}/>\n                            </FormControl>\n\n                        </CardBody>\n                        <CardFooter alignSelf={\"center\"}>\n                            <SubmitButton label={'save-profile-changes'} onClick={handleProfileChanges}>Save\n                                Changes</SubmitButton>\n                        </CardFooter>\n                    </Card>\n                </GridItem>\n                <GridItem colSpan={1} gap={1}>\n                    <DashboardCard buttonWidth={'100px'} height={'280px'} label={'upload-identity'}\n                                   buttonText={'Upload'} headerName={'Identity'}\n                                   cardWidth={'300px'}\n                                   optionalBodyOne={\n                                       <Box bg={'#edf2f7'} height={'120px'} borderRadius={'20px'} width={'200px'}>\n                                           <Image margin={'auto'}\n                                                  maxH={'120px'}\n                                                  src=\"images/img_identity.png\"\n                                                  alt=\"Placeholder for image of Identity\"\n                                           />\n                                       </Box>\n                                   }\n                    />\n                </GridItem>\n                <GridItem colSpan={1}>\n                    <DashboardCard buttonWidth={'150px'} height={'280px'} label={'upload-degree'}\n                                   buttonText={'Upload'} headerName={'My Diploma'}\n                                   cardWidth={'300px'} optionalBodyOne={\n                        <Image\n                            maxH={'120px'}\n                            src=\"images/img_degree.png\"\n                            alt=\"Placeholder for image of Degree\"\n                        />}/></GridItem>\n                <GridItem colSpan={1}>\n                    <DashboardCard buttonWidth={'200px'} height={'280px'} label={'delete-account'}\n                                   buttonText={'Delete my account'} headerName={'Delete My Account'} onClick={handleConfirmAction}\n                                   cardWidth={'300px'} optionalBodyOne={\n                        <HStack bg={'#107385'} maxW={'70%'} textAlign={'center'} marginLeft={'40px'} marginTop={'20px'}\n                                borderRadius={'10px'}>\n                            <Text padding={'5px'} color={'#FFFFFF'}>Deleting cannot be undone!</Text>\n                        </HStack>\n                    }/></GridItem>\n                <GridItem colSpan={1}>\n                    <DashboardCard buttonWidth={'150px'} height={'280px'} paddingTop={'15px'}\n                                   label={'save-changes-adress'} buttonText={'Save changes'}\n                                   headerName={'Adress + icon'} cardWidth={'300px'} onClick={handleLivingPlaceChanges}\n                                   optionalBodyOne={<>\n                                       <FormLabel margin={'0px'} fontSize={'xs'}>Streetname</FormLabel>\n                                       <InputField placeholder={tutor.address ? tutor.address.toString() : 'Unknown'}\n                                                   mb={1}\n                                                   variant={'unstyled'} border={'1px solid #e2e8f0'} bg={'#e2e8f0'}\n                                                   height={'var(--chakra-sizes-10)'}\n                                                   color={'black'} outline={'2px solid transparent'}\n                                                   fontSize={'xs'} textIndent={'20px'}\n                                                   borderRadius={'var(--chakra-radii-md)'}\n                                                   label={'inputfield-address'} value={streetName} onChange={(e) => {\n                                           setStreetName(e.target.value)\n                                       }}/>\n                                   </>\n                                   }\n                                   optionalBodyTwo={\n                                       <><FormLabel margin={'0px'} fontSize={'xs'}>Postcal code</FormLabel><InputField\n                                           placeholder={tutor.address ? tutor.address.toString() : 'Unknown'}\n                                           variant={'unstyled'} border={'1px solid #e2e8f0'} bg={'#e2e8f0'}\n                                           height={'var(--chakra-sizes-10)'}\n                                           color={'black'} outline={'2px solid transparent'}\n                                           fontSize={'xs'} textIndent={'20px'}\n                                           borderRadius={'var(--chakra-radii-md)'}\n                                           label={'inputfield-address'} value={postalCode} onChange={(e) => {\n                                           setPostalCode(e.target.value)\n                                       }}/></>}/>\n                </GridItem>\n                <GridItem colSpan={1}>\n                    <DashboardCard buttonWidth={'150px'} height={'280px'}\n                                   label={'save-changes-password'} buttonText={'Save changes'}\n                                   headerName={'Change Password'} cardWidth={'300px'}\n                                   optionalBodyOne={<InputField placeholder={'Previous password'}\n                                                                label={'inputfield-previous-password'}/>}\n                                   optionalBodyTwo={<InputField placeholder={'New password'}\n                                                                label={'inputfield-new-password'}/>}\n                    /></GridItem>\n            </SimpleGrid>\n        </Box>\n\n    )\n}\n\n\nexport default Profile\n",{"ruleId":"323","severity":1,"message":"324","line":63,"column":8,"nodeType":"325","endLine":63,"endColumn":16,"suggestions":"326"},{"ruleId":"323","severity":1,"message":"327","line":38,"column":8,"nodeType":"325","endLine":38,"endColumn":16,"suggestions":"328"},{"ruleId":"323","severity":1,"message":"329","line":40,"column":8,"nodeType":"325","endLine":40,"endColumn":10,"suggestions":"330"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tempArray'. Either include it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["331"],"React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["332"],"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["333"],{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},"Update the dependencies array to be: [tempArray]",{"range":"340","text":"341"},"Update the dependencies array to be: []",{"range":"342","text":"343"},"Update the dependencies array to be: [router]",{"range":"344","text":"345"},[2020,2028],"[tempArray]",[1562,1570],"[]",[1428,1430],"[router]"]